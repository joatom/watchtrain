i.viw
<svg>
  <text id="status" />
  
  <image id="catim" href="my-image.jpg" />
  <text id="catxt" fill="red" font-family="System-Regular">Hello TT World!</text>
</svg>




/*import document from "document";
import { inbox } from "file-transfer";
import fs from "fs";

let statusText = document.getElementById("status");
statusText.text = "Waiting...";

// Event occurs when new file(s) are received
inbox.onnewfile = () => {
  console.log("New file!");
  let fileName;
  do {
    // If there is a file, move it from staging into the application folder
    fileName = inbox.nextFile();
    if (fileName) {
      console.log(`Received File: <${fileName}>`);
      let data = fs.readFileSync(fileName, "ascii");
      statusText.text = `Received: ${data}`;
    }
  } while (fileName);
};
*/

import * as messaging from "messaging";

import { inbox } from "file-transfer";
import document from "document";

let catText = document.getElementById("catxt");

let catImg = document.getElementById("catim");

messaging.peerSocket.addEventListener("open", (evt) => {
  console.log(`Device msg open`);
});

messaging.peerSocket.addEventListener("message", (evt) => {
  console.error("fgdf");
});

/*
messaging.peerSocket.addEventListener("message", (evt) => {
  console.log("MESSAGE dd")
  if (evt.data) {
    
    var data = ""
    var action = ""

    //try{
    data = JSON.parse(evt.data)
    action = data.action
    //}
    //catch(e){}

    switch (action) {
      case 'metric_image':
        //console.log(`MESSAGE: ${data.image}`);
        break;
      case 'training progress':
        console.log(`MESSAGE1: ${Object.keys(data.payload)}`);
        console.log(`MESSAGE2: ${Object.values(data.payload)}`);
        break;
      default:
        console.log(`MESSAGE3: ${data.action}`);
    }
  }
});
*/


messaging.peerSocket.addEventListener("error", (err) => {
  console.error(`Connection error: ${err.code} - ${err.message}`);
});


function processAllFiles() {
  let fileName;
  while (fileName = inbox.nextFile()) {
    console.log(`/private/data/${fileName} is now available`);
    catText.text = `${fileName}`;
    catImg.image = `/private/data/${fileName}`;
  }
}
inbox.addEventListener("newfile", processAllFiles);
processAllFiles();